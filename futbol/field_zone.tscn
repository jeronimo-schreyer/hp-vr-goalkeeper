[gd_scene load_steps=52 format=3 uid="uid://cvb2rembywx1i"]

[ext_resource type="PackedScene" uid="uid://di1bu0tceg332" path="res://components/persistent/persistent_zone.tscn" id="1_0rr2j"]
[ext_resource type="Script" uid="uid://won2d7a713d3" path="res://futbol/field_zone.gd" id="2_cjy46"]
[ext_resource type="Script" uid="uid://bjmftoaiexphp" path="res://components/persistent/persistent_zone_info.gd" id="2_gutdt"]
[ext_resource type="PackedScene" uid="uid://bpdj5njb8nhot" path="res://addons/godot-xr-tools/hands/scenes/highpoly/left_fullglove_hand.tscn" id="3_frso2"]
[ext_resource type="PackedScene" uid="uid://d1tl07geqm5xq" path="res://addons/godot-xr-tools/hands/scenes/highpoly/right_fullglove_hand.tscn" id="4_bx63y"]
[ext_resource type="PackedScene" uid="uid://bkv43ec6chcf3" path="res://addons/godot-xr-tools/hands/scenes/collision/collision_hand_left.tscn" id="4_ojlaj"]
[ext_resource type="Script" uid="uid://dk50cwyb3kii0" path="res://addons/godot-xr-tools/player/player_body.gd" id="5_kyq1k"]
[ext_resource type="PackedScene" uid="uid://c3uoohvnshach" path="res://addons/godot-xr-tools/hands/scenes/collision/collision_hand_right.tscn" id="6_dlkoi"]
[ext_resource type="Script" uid="uid://2pwbunwoaubh" path="res://addons/godot-xr-tools/rumble/rumble_event.gd" id="7_oohla"]
[ext_resource type="Material" uid="uid://csepeix2yvih" path="res://assets/prototype_materials/grass.tres" id="7_y5j6b"]
[ext_resource type="Script" uid="uid://by1yufsdelqu5" path="res://futbol/ball_spawn.gd" id="9_7b2ym"]
[ext_resource type="Script" uid="uid://dj4bnqatdmcmm" path="res://addons/godot-xr-tools/overrides/ground_physics_settings.gd" id="9_ug6su"]
[ext_resource type="PackedScene" uid="uid://61t3pf0u4edq" path="res://futbol/ball.tscn" id="12_yvnte"]
[ext_resource type="AudioStream" uid="uid://dc0dfhcd6vinx" path="res://assets/sounds/sfx/Special Hit 4_2.wav" id="13_5w3tt"]
[ext_resource type="PackedScene" uid="uid://cbuxwx2f7bev5" path="res://assets/models/stadium/FootballStadiumADay.glb" id="14_qrlab"]
[ext_resource type="PackedScene" uid="uid://clujaf3u776a3" path="res://addons/godot-xr-tools/objects/viewport_2d_in_3d.tscn" id="14_s4m5l"]
[ext_resource type="PackedScene" uid="uid://w0pot2ev0fbp" path="res://futbol/field_ui.tscn" id="15_s4m5l"]
[ext_resource type="AudioStream" uid="uid://cd57uklrjo584" path="res://assets/sounds/sfx/gol.wav" id="16_of7pg"]
[ext_resource type="AudioStream" uid="uid://qwjmg52bp552" path="res://assets/sounds/sfx/Crowd Loop 02.wav" id="17_ak2lq"]
[ext_resource type="AudioStream" uid="uid://dq8gvg42hcyev" path="res://assets/sounds/sfx/Whistle 1_1.wav" id="18_ak2lq"]
[ext_resource type="AudioStream" uid="uid://32dkwuxvb3y2" path="res://assets/sounds/sfx/wind_outside_field_low_loop.wav" id="19_oohla"]
[ext_resource type="AudioStream" uid="uid://chp6u37w8smv4" path="res://assets/sounds/sfx/Soccer Ball Catch 03.wav" id="21_of7pg"]
[ext_resource type="AudioStream" uid="uid://dr2ew7x6xjgcd" path="res://assets/sounds/sfx/Cheer 05.wav" id="23_4d5j6"]
[ext_resource type="Material" uid="uid://5tfugh0mje4j" path="res://futbol/field_zone.tres" id="24_fl0et"]

[sub_resource type="Resource" id="Resource_v1rgo"]
script = ExtResource("7_oohla")
magnitude = 0.5
active_during_pause = true
indefinite = false
duration_ms = 300
metadata/_custom_type_script = "uid://2pwbunwoaubh"

[sub_resource type="Resource" id="Resource_j6qmu"]
script = ExtResource("7_oohla")
magnitude = 0.5
active_during_pause = true
indefinite = false
duration_ms = 10
metadata/_custom_type_script = "uid://2pwbunwoaubh"

[sub_resource type="Resource" id="Resource_ejhib"]
script = ExtResource("2_gutdt")
zone_id = "field"
instance_scene = "res://futbol/field_zone.tscn"

[sub_resource type="Shader" id="Shader_ug6su"]
code = "shader_type sky;
render_mode use_debanding;

uniform vec4 sky_top_color : source_color = vec4(0.385, 0.454, 0.55, 1.0);
uniform vec4 sky_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float sky_curve : hint_range(0, 1) = 0.15;
uniform float sky_energy = 1.0; // In Lux.
uniform sampler2D sky_cover : filter_linear, source_color, hint_default_black;
uniform vec4 sky_cover_modulate : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform vec4 ground_bottom_color : source_color = vec4(0.2, 0.169, 0.133, 1.0);
uniform vec4 ground_horizon_color : source_color = vec4(0.646, 0.656, 0.67, 1.0);
uniform float ground_curve : hint_range(0, 1) = 0.02;
uniform float ground_energy = 1.0;
uniform float sun_angle_max = 30.0;
uniform float sun_curve : hint_range(0, 1) = 0.15;
uniform float exposure : hint_range(0, 128) = 1.0;

// Wind offset direction (x and y only)
uniform vec2 wind_offset_direction = vec2(0.5, 0.1); // Control direction of offset (x, y)
uniform float wind_speed : hint_range(0.0, 25.0) = 1.0; // Speed of the noise movement over time

// Cloud change settings
uniform bool clouds_change = true; // Whether to change the cloud layer or not
uniform float cloud_change_rate : hint_range(0.0, 5.0) = .40; // Rate at which the cloud effect changes

// Pole blending parameters
uniform float pole_blend_shape : hint_range(0.0, 2.0) = 0.05; // How much the noise affects the blend shape
uniform float pole_blend_strength : hint_range(0, 1) = 0.05; // Control blending intensity at poles
uniform float pole_blend_brightness : hint_range(0.0, 1.0) = .3;

// Horizon blending parameters - similar to pole blending
uniform float horizon_blend_shape : hint_range(0.0, 2.0) = 0.05; // How much the noise affects the horizon blend shape
uniform float horizon_blend_strength : hint_range(0, 1) = 0.05; // Control blending intensity at horizon
uniform float horizon_blend_brightness : hint_range(0.0, 1.0) = .3;
uniform float horizon_blend_width : hint_range(0.0, 0.5) = 0.1; // Width of the horizon blend region

void sky() {
    float v_angle = acos(clamp(EYEDIR.y, -1.0, 1.0));
    float c = (1.0 - v_angle / (PI * 0.5));
    vec3 sky = mix(sky_horizon_color.rgb, sky_top_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / sky_curve), 0.0, 1.0));
    sky *= sky_energy;

    if (LIGHT0_ENABLED) {
        float sun_angle = acos(dot(LIGHT0_DIRECTION, EYEDIR));
        if (sun_angle < LIGHT0_SIZE) {
            sky = LIGHT0_COLOR * LIGHT0_ENERGY;
        } else if (sun_angle < sun_angle_max) {
            float c2 = (sun_angle - LIGHT0_SIZE) / (sun_angle_max - LIGHT0_SIZE);
            sky = mix(LIGHT0_COLOR * LIGHT0_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
        }
    }

    if (LIGHT1_ENABLED) {
        float sun_angle = acos(dot(LIGHT1_DIRECTION, EYEDIR));
        if (sun_angle < LIGHT1_SIZE) {
            sky = LIGHT1_COLOR * LIGHT1_ENERGY;
        } else if (sun_angle < sun_angle_max) {
            float c2 = (sun_angle - LIGHT1_SIZE) / (sun_angle_max - LIGHT1_SIZE);
            sky = mix(LIGHT1_COLOR * LIGHT1_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
        }
    }

    if (LIGHT2_ENABLED) {
        float sun_angle = acos(dot(LIGHT2_DIRECTION, EYEDIR));
        if (sun_angle < LIGHT2_SIZE) {
            sky = LIGHT2_COLOR * LIGHT2_ENERGY;
        } else if (sun_angle < sun_angle_max) {
            float c2 = (sun_angle - LIGHT2_SIZE) / (sun_angle_max - LIGHT2_SIZE);
            sky = mix(LIGHT2_COLOR * LIGHT2_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
        }
    }

    if (LIGHT3_ENABLED) {
        float sun_angle = acos(dot(LIGHT3_DIRECTION, EYEDIR));
        if (sun_angle < LIGHT3_SIZE) {
            sky = LIGHT3_COLOR * LIGHT3_ENERGY;
        } else if (sun_angle < sun_angle_max) {
            float c2 = (sun_angle - LIGHT3_SIZE) / (sun_angle_max - LIGHT3_SIZE);
            sky = mix(LIGHT3_COLOR * LIGHT3_ENERGY, sky, clamp(1.0 - pow(1.0 - c2, 1.0 / sun_curve), 0.0, 1.0));
        }
    }

    // Sample the sky cover texture with dynamic offset (only x and y direction)
    vec2 noise_coords = SKY_COORDS.xy + wind_offset_direction * wind_speed * TIME * 0.01;

    // Wrap UVs to keep tiling seamless
    noise_coords = mod(noise_coords, 1.0);

    // Sample the original noise texture
    vec4 sky_cover_texture = texture(sky_cover, noise_coords);

    // Sample flipped noise for Z-offset effect
    vec4 flipped_noise = texture(sky_cover, vec2(noise_coords.x, 1.0 - noise_coords.y));

    // Z blending (cloud change) logic
    float cloud_blend_factor = 0.0;
    if (clouds_change) {
        // Use a sine wave to blend clouds smoothly over time based on the cloud_change_rate
        cloud_blend_factor = 0.5 + 0.5 * sin(TIME * cloud_change_rate);
    }

    // Blend between the original and flipped noise using cloud_blend_factor
    vec4 blended_noise_texture = mix(sky_cover_texture, flipped_noise, cloud_blend_factor);

    // Pole blending
    float base_pole_blend_factor = abs(EYEDIR.y);  // Original blend factor (circular)
    float noise_pole_blend = blended_noise_texture.r * pole_blend_shape;
    float pole_blend_factor = smoothstep(1.0 - pole_blend_strength, 1.0, base_pole_blend_factor + noise_pole_blend);
    
    // Horizon blending - detect when we're near the horizon
    float horizon_distance = abs(EYEDIR.y);  // This will be close to 0 near the horizon
    float horizon_factor = 1.0 - smoothstep(0.0, horizon_blend_width, horizon_distance);
    float noise_horizon_blend = blended_noise_texture.g * horizon_blend_shape;
    float horizon_blend_factor = smoothstep(1.0 - horizon_blend_strength, 1.0, horizon_factor + noise_horizon_blend);
    
    // Combine both blend factors (poles and horizon)
    float combined_blend_factor = max(pole_blend_factor, horizon_blend_factor);
    
    // Blend noise with brightness value based on the combined factor
    vec3 blended_noise = mix(blended_noise_texture.rgb, vec3(pole_blend_brightness), pole_blend_factor);
    blended_noise = mix(blended_noise, vec3(horizon_blend_brightness), horizon_blend_factor);

    sky += (blended_noise * sky_cover_modulate.rgb) * blended_noise_texture.a * sky_cover_modulate.a * sky_energy;

    // Ground blending
    c = (v_angle - (PI * 0.5)) / (PI * 0.5);
    vec3 ground = mix(ground_horizon_color.rgb, ground_bottom_color.rgb, clamp(1.0 - pow(1.0 - c, 1.0 / ground_curve), 0.0, 1.0));
    ground *= ground_energy;

    COLOR = mix(ground, sky, step(0.0, EYEDIR.y)) * exposure;
}"

[sub_resource type="Gradient" id="Gradient_qrlab"]
offsets = PackedFloat32Array(0.386046, 1)
colors = PackedColorArray(0, 0.1855, 0.53, 0.517647, 1, 1, 1, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_s4m5l"]
fractal_gain = 0.6
fractal_weighted_strength = 0.5

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_t3dyw"]
seamless = true
seamless_blend_skirt = 1.0
color_ramp = SubResource("Gradient_qrlab")
noise = SubResource("FastNoiseLite_s4m5l")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_5w3tt"]
shader = SubResource("Shader_ug6su")
shader_parameter/sky_top_color = Color(0.385, 0.454, 0.55, 1)
shader_parameter/sky_horizon_color = Color(0.6463, 0.6558, 0.6708, 1)
shader_parameter/sky_curve = 0.15
shader_parameter/sky_energy = 1.0
shader_parameter/sky_cover = SubResource("NoiseTexture2D_t3dyw")
shader_parameter/sky_cover_modulate = Color(1, 1, 1, 1)
shader_parameter/ground_bottom_color = Color(0.2, 0.169, 0.133, 1)
shader_parameter/ground_horizon_color = Color(0.6463, 0.6558, 0.6708, 1)
shader_parameter/ground_curve = 0.02
shader_parameter/ground_energy = 1.0
shader_parameter/sun_angle_max = 0.523599
shader_parameter/sun_curve = 0.15
shader_parameter/exposure = 1.0
shader_parameter/wind_offset_direction = Vector2(0.5, 0.1)
shader_parameter/wind_speed = 0.5
shader_parameter/clouds_change = true
shader_parameter/cloud_change_rate = 0.721
shader_parameter/pole_blend_shape = 0.2
shader_parameter/pole_blend_strength = 0.5
shader_parameter/pole_blend_brightness = 1.0
shader_parameter/horizon_blend_shape = 0.05
shader_parameter/horizon_blend_strength = 0.05
shader_parameter/horizon_blend_brightness = 0.3
shader_parameter/horizon_blend_width = 0.1

[sub_resource type="Sky" id="Sky_ak2lq"]
sky_material = SubResource("ShaderMaterial_5w3tt")

[sub_resource type="Environment" id="Environment_v1rgo"]
background_mode = 2
sky = SubResource("Sky_ak2lq")

[sub_resource type="SphereShape3D" id="SphereShape3D_ak2lq"]
radius = 0.115

[sub_resource type="SphereShape3D" id="SphereShape3D_v1rgo"]
radius = 0.115

[sub_resource type="Resource" id="Resource_qrlab"]
script = ExtResource("9_ug6su")
flags = 0
move_drag = 5.0
move_traction = 30.0
stop_on_slope = true
move_max_slope = 45.0
jump_max_slope = 45.0
jump_velocity = 0.0
bounciness = 0.0
bounce_threshold = 0.0
metadata/_custom_type_script = "uid://dj4bnqatdmcmm"

[sub_resource type="PhysicsMaterial" id="PhysicsMaterial_yvnte"]
friction = 0.5
bounce = 0.3

[sub_resource type="QuadMesh" id="QuadMesh_ptin4"]
material = ExtResource("7_y5j6b")
size = Vector2(20, 20)

[sub_resource type="BoxShape3D" id="BoxShape3D_7hdnx"]
size = Vector3(83.3581, 1, 130.888)

[sub_resource type="CylinderShape3D" id="CylinderShape3D_qrlab"]
height = 2.5
radius = 0.082

[sub_resource type="BoxShape3D" id="BoxShape3D_oohla"]
size = Vector3(7.27597, 2.37488, 0.1)

[sub_resource type="BoxShape3D" id="BoxShape3D_of7pg"]
size = Vector3(0.1, 2.40698, 2.03149)

[sub_resource type="BoxShape3D" id="BoxShape3D_4d5j6"]
size = Vector3(7.27594, 0.1, 2.19702)

[sub_resource type="BoxShape3D" id="BoxShape3D_fl0et"]
size = Vector3(7.03882, 2.37927, 1.57867)

[sub_resource type="QuadMesh" id="QuadMesh_5w3tt"]
resource_local_to_scene = true
size = Vector2(3, 2)

[sub_resource type="ViewportTexture" id="ViewportTexture_v1rgo"]
viewport_path = NodePath("Viewport")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_fl0et"]
transparency = 1
cull_mode = 2
albedo_texture = SubResource("ViewportTexture_v1rgo")
texture_filter = 1

[sub_resource type="BoxShape3D" id="BoxShape3D_j6qmu"]
resource_local_to_scene = true
size = Vector3(3, 2, 0.02)

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_fl0et"]
particle_flag_rotate_y = true
emission_shape = 3
emission_box_extents = Vector3(3, 0.1, 3)
angle_min = -720.0
angle_max = 720.0
direction = Vector3(0, 1, 0)
initial_velocity_min = 1.0
initial_velocity_max = 1.0
angular_velocity_min = -1.00002
angular_velocity_max = 360.0
orbit_velocity_min = -1.0
orbit_velocity_max = 1.0
radial_velocity_min = -1.00002
radial_velocity_max = 0.999978
gravity = Vector3(0, -0.98, 0)
linear_accel_min = -1.0
linear_accel_max = 0.999998
radial_accel_min = -1.0
radial_accel_max = 0.999998
tangential_accel_min = -5.0
tangential_accel_max = 5.0
attractor_interaction_enabled = false
scale_min = 0.1
scale_max = 0.2
turbulence_enabled = true
turbulence_noise_scale = 1.0
turbulence_noise_speed_random = 4.0
collision_mode = 1
collision_friction = 0.0
collision_bounce = 0.0

[sub_resource type="QuadMesh" id="QuadMesh_6muwv"]
material = ExtResource("24_fl0et")

[node name="PersistentZone" instance=ExtResource("1_0rr2j")]
script = ExtResource("2_cjy46")
start_event = SubResource("Resource_v1rgo")
ball_event = SubResource("Resource_j6qmu")
zone_info = SubResource("Resource_ejhib")

[node name="WorldEnvironment" type="WorldEnvironment" parent="." index="0"]
environment = SubResource("Environment_v1rgo")

[node name="CollisionHandLeft" parent="XROrigin3D/LeftHand" index="0" instance=ExtResource("4_ojlaj")]

[node name="LeftHand" parent="XROrigin3D/LeftHand/CollisionHandLeft" index="1" instance=ExtResource("3_frso2")]

[node name="Area3D" type="Area3D" parent="XROrigin3D/LeftHand" index="1"]
collision_layer = 7
collision_mask = 7

[node name="CollisionShape3D" type="CollisionShape3D" parent="XROrigin3D/LeftHand/Area3D" index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.021, -0.0494177, 0.085813)
shape = SubResource("SphereShape3D_ak2lq")

[node name="CollisionHandRight" parent="XROrigin3D/RightHand" index="0" instance=ExtResource("6_dlkoi")]

[node name="RightHand" parent="XROrigin3D/RightHand/CollisionHandRight" index="1" instance=ExtResource("4_bx63y")]

[node name="Area3D" type="Area3D" parent="XROrigin3D/RightHand" index="1"]
collision_layer = 7
collision_mask = 7

[node name="CollisionShape3D" type="CollisionShape3D" parent="XROrigin3D/RightHand/Area3D" index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.0206467, -0.0494177, 0.0854588)
shape = SubResource("SphereShape3D_v1rgo")

[node name="XRToolsPlayerBody" type="CharacterBody3D" parent="XROrigin3D" index="3"]
process_priority = -100
process_physics_priority = -100
top_level = true
collision_layer = 524288
collision_mask = 1023
script = ExtResource("5_kyq1k")
physics = SubResource("Resource_qrlab")

[node name="World" type="Node3D" parent="." index="2"]

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="World" index="0"]
transform = Transform3D(-0.707107, -0.5, 0.5, 0, 0.707107, 0.707107, -0.707107, 0.5, -0.5, 0, 8, 0)

[node name="Ground" type="StaticBody3D" parent="World" index="1"]
physics_material_override = SubResource("PhysicsMaterial_yvnte")

[node name="MeshInstance3D" type="MeshInstance3D" parent="World/Ground" index="0"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0)
visible = false
mesh = SubResource("QuadMesh_ptin4")

[node name="CollisionShape3D" type="CollisionShape3D" parent="World/Ground" index="1"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.258194, -0.5, -53.8951)
shape = SubResource("BoxShape3D_7hdnx")

[node name="CSGBox3D" type="CSGBox3D" parent="World" index="2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.75, 0)
visible = false
use_collision = true
size = Vector3(7.32, 3.5, 0.1)

[node name="CSGBox3D" type="CSGBox3D" parent="World/CSGBox3D" index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.025, 0)
operation = 2
size = Vector3(7.22, 3.45, 0.1)

[node name="BallSpawn" type="Node3D" parent="." index="3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -10.931)
script = ExtResource("9_7b2ym")
linear_velocity = Vector3(0, 10, 7)
ball_scene = ExtResource("12_yvnte")

[node name="Target" type="Marker3D" parent="BallSpawn" index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 10)

[node name="Cooldown" type="Timer" parent="BallSpawn" index="1"]
wait_time = 5.0

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="BallSpawn" index="2"]
stream = ExtResource("13_5w3tt")

[node name="FootballStadiumADay" parent="." index="4" instance=ExtResource("14_qrlab")]
transform = Transform3D(-4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, -2.37714e-06, 0, -54.3826)

[node name="Football01" parent="FootballStadiumADay/RootNode" index="6"]
visible = false

[node name="Football02" parent="FootballStadiumADay/RootNode" index="7"]
visible = false

[node name="Plastic" parent="FootballStadiumADay/RootNode/FootballStadium" index="6"]
visible = false

[node name="Arco" type="StaticBody3D" parent="FootballStadiumADay" index="1"]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, -54.3826, 0, 4.54747e-13)

[node name="Derecho" type="CollisionShape3D" parent="FootballStadiumADay/Arco" index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 3.7033, 1.25, -0.00590564)
shape = SubResource("CylinderShape3D_qrlab")

[node name="Travesano" type="CollisionShape3D" parent="FootballStadiumADay/Arco" index="1"]
transform = Transform3D(-4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0, 1, -5.5431e-08, 2.51811, -0.006)
shape = SubResource("CylinderShape3D_qrlab")

[node name="Izquierdo" type="CollisionShape3D" parent="FootballStadiumADay/Arco" index="2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -3.70319, 1.25, -0.00628415)
shape = SubResource("CylinderShape3D_qrlab")

[node name="Red Atras" type="CollisionShape3D" parent="FootballStadiumADay/Arco" index="3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.00352478, 1.21345, 2.06476)
shape = SubResource("BoxShape3D_oohla")

[node name="Red Izq" type="CollisionShape3D" parent="FootballStadiumADay/Arco" index="4"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 3.59401, 1.24057, 1.08357)
shape = SubResource("BoxShape3D_of7pg")

[node name="Red Der" type="CollisionShape3D" parent="FootballStadiumADay/Arco" index="5"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -3.59401, 1.24057, 1.08357)
shape = SubResource("BoxShape3D_of7pg")

[node name="CollisionShape3D" type="CollisionShape3D" parent="FootballStadiumADay/Arco" index="6"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.00180054, 2.43465, 1.19397)
shape = SubResource("BoxShape3D_4d5j6")

[node name="Gol" type="Area3D" parent="FootballStadiumADay" index="2"]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, -55.6027, 0, -5.33312e-08)
collision_layer = 7
collision_mask = 7

[node name="CollisionShape3D" type="CollisionShape3D" parent="FootballStadiumADay/Gol" index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.043335, 1.23238, 0.0896912)
shape = SubResource("BoxShape3D_fl0et")

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="FootballStadiumADay/Gol" index="1"]
stream = ExtResource("16_of7pg")
volume_db = -3.0

[node name="Viewport2Din3D" parent="." index="5" instance=ExtResource("14_s4m5l")]
transform = Transform3D(0.843823, 0, 0.536622, 0, 1, 0, -0.536622, 0, 0.843823, -5.97, 2, -9.178)
viewport_size = Vector2(576, 324)

[node name="Viewport" parent="Viewport2Din3D" index="0"]
size = Vector2i(576, 324)

[node name="UI" parent="Viewport2Din3D/Viewport" index="0" instance=ExtResource("15_s4m5l")]

[node name="Screen" parent="Viewport2Din3D" index="1"]
mesh = SubResource("QuadMesh_5w3tt")
surface_material_override/0 = SubResource("StandardMaterial3D_fl0et")

[node name="StaticBody3D" parent="Viewport2Din3D" index="2"]
viewport_size = Vector2(576, 324)

[node name="CollisionShape3D" parent="Viewport2Din3D/StaticBody3D" index="0"]
shape = SubResource("BoxShape3D_j6qmu")

[node name="Crowd" type="AudioStreamPlayer" parent="." index="6"]
stream = ExtResource("17_ak2lq")
volume_db = -10.0
autoplay = true

[node name="Wind" type="AudioStreamPlayer" parent="." index="7"]
stream = ExtResource("19_oohla")
volume_db = -12.0
autoplay = true

[node name="Whistle" type="AudioStreamPlayer" parent="." index="8"]
stream = ExtResource("18_ak2lq")
volume_db = -2.0

[node name="Catch" type="AudioStreamPlayer" parent="." index="9"]
stream = ExtResource("21_of7pg")
volume_db = -3.0

[node name="EndGameCrowd" type="AudioStreamPlayer" parent="." index="10"]
stream = ExtResource("23_4d5j6")
volume_db = -2.0

[node name="GPUParticles3D" type="GPUParticles3D" parent="." index="11"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 6.31566, 0.777552)
layers = 7
emitting = false
amount = 1000
lifetime = 20.0
transform_align = 2
process_material = SubResource("ParticleProcessMaterial_fl0et")
draw_pass_1 = SubResource("QuadMesh_6muwv")

[connection signal="body_entered" from="XROrigin3D/LeftHand/Area3D" to="." method="_on_area_3d_body_entered" binds= [NodePath("..")]]
[connection signal="body_entered" from="XROrigin3D/RightHand/Area3D" to="." method="_on_area_3d_body_entered" binds= ["right"]]
[connection signal="ball_spawned" from="BallSpawn" to="." method="_on_ball_spawned"]
[connection signal="timeout" from="BallSpawn/Cooldown" to="BallSpawn" method="_on_cooldown_timeout"]
[connection signal="body_entered" from="FootballStadiumADay/Gol" to="." method="_on_gol_body_entered"]

[editable path="FootballStadiumADay"]
[editable path="Viewport2Din3D"]
[editable path="Viewport2Din3D/Viewport/UI"]
